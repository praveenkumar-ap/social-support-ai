

services:
  db:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_USER:     ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB:       ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      retries: 5

  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    env_file:
      - .env
    volumes:
      - chroma-data:/data

  llm:
    image: ollama/ollama:latest
    env_file:
      - .env
    command: ["serve"]
    restart: unless-stopped
    ports:
      - "${LLM_PORT:-11434}:11434"
    volumes:
      - llm-data:/root/.ollama

  api:
    build:
      context: .
      args:
        OLLAMA_MODEL: ${OLLAMA_MODEL}
    env_file:
      - .env
    command: >
      uvicorn src.api.main:app
        --host ${UVICORN_HOST:-0.0.0.0}
        --port ${UVICORN_PORT:-8000}
    volumes:
      - .:/app:delegated
    environment:
      - PYTHONPATH=/app
    ports:
      - "${API_PORT:-8001}:8000"
    depends_on:
      - db
      - chromadb
      - llm

  ui:
    image: python:3.9-slim
    env_file:
      - .env
    working_dir: /app
    environment:
      - PYTHONPATH=/app
    volumes:
      - .:/app:delegated
    command: >
      bash -c "
        pip install --no-cache-dir -r requirements.txt &&
        streamlit run src/ui/app.py
          --server.port ${UI_PORT:-8501}
          --server.enableCORS false
      "
    ports:
      - "${UI_PORT:-8501}:${UI_PORT:-8501}"
    depends_on:
      - api

volumes:
  db-data:
  chroma-data:
  llm-data: